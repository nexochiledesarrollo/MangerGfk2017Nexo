<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	
	<http pattern="/login" security="none"/>
	<http pattern="/resources/**" security="none" />
	<http pattern="/public_ftp_manager/**" security="none" />
	
	<http pattern="/olvidoClave" security="none" />
	<http pattern="/RestOtpUser/**" security="none" />
	<http pattern="/otpService/**" security="none" />
    
    <beans:bean id="ajaxTimeoutRedirectFilter" class="cl.nexo.manager.security.filter.GenericFilterBean.AjaxTimeoutRedirectFilter">
		<beans:property name="customSessionExpiredErrorCode" value="901"/>
	</beans:bean>
    <!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
		<!-- Accesos generales -->
		<intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')" />
		<!-- Repositorios -->
		
		<intercept-url pattern="/public_ftp_manager/**" access="permitAll" />
		<intercept-url pattern="/private_ftp_manager/**" access="hasRole('ROLE_ADMIN')" />
		<!-- ReactivaciÃ³n de usuario -->
		<intercept-url pattern="/olvidoClave" access="permitAll" />
		<intercept-url pattern="/RestOtpUser/**" access="permitAll" />
		<intercept-url pattern="/otpService/**" access="permitAll" />
		
		<custom-filter ref="ajaxTimeoutRedirectFilter" after="EXCEPTION_TRANSLATION_FILTER"/>
		
		
		<access-denied-handler error-page="/403" />
		
		<form-login 
		    login-page="/login" 
		    default-target-url="/home" 
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/login?logout"  />
		<!-- csrf soporta solo metodo get -->
	</http>
	<global-method-security pre-post-annotations="enabled"/>
	
	<!-- Select users and user_roles from database -->
	<authentication-manager>
	  <authentication-provider>
	  	<password-encoder ref="encoder" />
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "SELECT login_user, pass_user, estado_user FROM man_login_user WHERE login_user =?"
		  authorities-by-username-query=
		    "SELECT login_user, rol_user FROM man_login_user WHERE login_user =?  " />
	  </authentication-provider>
	  
	</authentication-manager>
	<beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="10" />
	</beans:bean>

</beans:beans>